import os
import platform

topDir = os.getcwd()
cpp = None
buildDir = None
targetName = 'TOPOLO'


cppPaths = [
            topDir,
            ]

cppFlags = [
            ]

cppDefs = [
           ]

libPaths = [
            ]

releaseBuild = ARGUMENTS.get('DEBUG', 0) in [0, '0']

if platform.system() in ['Darwin', 'Linux']:
  cpp = 'g++'
  cppFlags.extend([
              '-Wall',
              '-std=c++11',
              ])
  if releaseBuild:
      cppFlags.append('-O3')
      cppDefs.append('NDEBUG')
  else:
      cppFlags.append('-g')

# For OS X
if platform.system() == 'Darwin':
  cppPaths.append('/opt/local/include')
  libPaths.append('/opt/local/lib')
elif platform.system() == 'Linux':
  cppPaths.append('/usr/include')


if releaseBuild:
    buildDir = 'release'
else:
    buildDir = 'debug'
    targetName += '_debug'

env = Environment(CXX = cpp, CXXFLAGS = cppFlags, CPPPATH = cppPaths, CPPDEFINES = cppDefs, LIBPATH = libPaths)

env.targetName = targetName
env.topDir = topDir

buildDir = os.path.join('..', 'builds', buildDir)

SConscript('SConscript', exports = 'env', variant_dir = buildDir, src_dir = '.', duplicate = 0)
